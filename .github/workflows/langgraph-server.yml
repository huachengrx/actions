name: build-langgraph-server-docker-image

on:
  workflow_dispatch:
env:
  DOCKER_IMAGE: ${{ vars.DOCKER_WORKSPACE }}langgraph-server
  REPOSITORY: 'huachengrx/langgraph-server'
  BRANCH_PROD: main
  DOCKER_REGISTRY: ${{ vars.DOCKER_REGISTRY_HEYUAN }}
  DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
  RANCHER_API_ENDPOINT: ${{ secrets.RANCHER_API_ENDPOINT }}
  RANCHER_PROJECT: c-m-9fqdgvkm:p-pvkqn
  RANCHER_DEPLOYMENT_NAME: prod:langgraph-server

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          repository: ${{ env.REPOSITORY }}
          ref: ${{ env.BRANCH_PROD }}
          token: ${{ secrets.ACTION_TOKEN }}
          node-version: 20

      - name: Get the latest commit SHA of the repository
        id: get-sha
        run: echo "::set-output name=sha::$(git rev-parse HEAD)"

      - name: Get current date
        id: current-date
        run: echo "::set-output name=date::$(TZ=Asia/Shanghai date +'%Y-%m-%d-%H-%M-%S')"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}

      - name: Build and push Docker image
        run: |
          # Build the Docker image with the primary tag
          npx @langchain/langgraph-cli build -t ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:${{ env.BRANCH_PROD }}

          # Tag the image with additional tags
          docker tag ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:${{ env.BRANCH_PROD }} ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:${{ env.BRANCH_PROD }}-${{ steps.current-date.outputs.date }}
          docker tag ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:${{ env.BRANCH_PROD }} ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:${{ steps.get-sha.outputs.sha }}

          # Push all tagged images to the Docker registry
          docker push ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:${{ env.BRANCH_PROD }}
          docker push ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:${{ env.BRANCH_PROD }}-${{ steps.current-date.outputs.date }}
          docker push ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:${{ steps.get-sha.outputs.sha }}

  dispatch-deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy Dev
        run: |
          curl -X POST \
            -u "${{ secrets.RANCHER_USER_PASS }}" \
            "${{ env.RANCHER_API_ENDPOINT }}/v3/project/${{ env.RANCHER_PROJECT }}/workloads/deployment:${{ env.RANCHER_DEPLOYMENT_NAME }}?action=redeploy"
